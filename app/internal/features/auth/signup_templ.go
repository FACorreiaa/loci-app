// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package auth

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	button "github.com/FACorreiaa/go-templui/app/internal/components/button"
	card "github.com/FACorreiaa/go-templui/app/internal/components/card"
)

func SignUp() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\"><div class=\"min-h-screen flex items-center justify-center px-4 sm:px-6 lg:px-8\"><div class=\"w-full max-w-md space-y-6\"><!-- Logo --><div class=\"text-center\"><div class=\"mx-auto w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center mb-4\"><span class=\"text-white font-bold text-xl\">L</span></div><h2 class=\"text-2xl font-bold text-foreground\">Create your account</h2><p class=\"text-muted-foreground mt-2\">Join thousands of travelers discovering hidden gems</p></div><!-- Sign Up Form -->")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<form hx-post=\"/auth/signup\" hx-trigger=\"submit\" hx-target=\"#signup-response\" hx-indicator=\"#signup-loading\"><div id=\"signup-response\" class=\"mb-4\"></div><div class=\"space-y-4\"><div class=\"grid grid-cols-2 gap-4\"><div><label for=\"firstname\" class=\"block text-sm font-medium text-card-foreground mb-2\">First name</label> <input type=\"text\" id=\"firstname\" name=\"firstname\" required class=\"w-full px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-background placeholder-muted-foreground transition-all\" placeholder=\"John\"></div><div><label for=\"lastname\" class=\"block text-sm font-medium text-card-foreground mb-2\">Last name</label> <input type=\"text\" id=\"lastname\" name=\"lastname\" required class=\"w-full px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-background placeholder-muted-foreground transition-all\" placeholder=\"Doe\"></div></div><div><label for=\"email\" class=\"block text-sm font-medium text-card-foreground mb-2\">Email address</label> <input type=\"email\" id=\"email\" name=\"email\" required class=\"w-full px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-background placeholder-muted-foreground transition-all\" placeholder=\"john@example.com\"></div><div><label for=\"signup-password\" class=\"block text-sm font-medium text-card-foreground mb-2\">Password</label><div class=\"relative\"><input type=\"password\" id=\"signup-password\" name=\"password\" required class=\"w-full px-4 py-3 pr-12 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-background placeholder-muted-foreground transition-all\" placeholder=\"Create a strong password\"> <button type=\"button\" onclick=\"togglePasswordVisibility('signup-password')\" class=\"absolute right-3 top-1/2 -translate-y-1/2 text-muted-foreground hover:text-foreground transition-colors\"><svg id=\"signup-eye-closed\" class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"></path></svg> <svg id=\"signup-eye-open\" class=\"w-5 h-5 hidden\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path></svg></button></div><p class=\"text-xs text-muted-foreground mt-1\">Must be at least 8 characters with numbers and letters</p></div><div><label for=\"confirm-password\" class=\"block text-sm font-medium text-card-foreground mb-2\">Confirm password</label> <input type=\"password\" id=\"confirm-password\" name=\"confirm_password\" required class=\"w-full px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-background placeholder-muted-foreground transition-all\" placeholder=\"Confirm your password\"></div><div class=\"flex items-start gap-2\"><input type=\"checkbox\" id=\"terms\" name=\"terms\" required class=\"rounded border-border mt-1\"> <label for=\"terms\" class=\"text-sm text-muted-foreground cursor-pointer\">I agree to the <a href=\"/terms\" class=\"text-blue-600 hover:text-blue-700 font-medium\">Terms of Service</a> and <a href=\"/privacy\" class=\"text-blue-600 hover:text-blue-700 font-medium\">Privacy Policy</a></label></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Var4 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
					templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
					templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
					if !templ_7745c5c3_IsBuffer {
						defer func() {
							templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
							if templ_7745c5c3_Err == nil {
								templ_7745c5c3_Err = templ_7745c5c3_BufErr
							}
						}()
					}
					ctx = templ.InitializeContext(ctx)
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<span id=\"signup-loading\" class=\"htmx-indicator\"><div class=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin inline-block mr-2\"></div>Creating account...</span> <span class=\"htmx-request:hidden\">Create account</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					return nil
				})
				templ_7745c5c3_Err = button.Button(button.Props{
					Type:      button.TypeSubmit,
					FullWidth: true,
				}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var4), templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</div></form><!-- Divider --> <div class=\"relative my-6\"><div class=\"absolute inset-0 flex items-center\"><div class=\"w-full border-t border-border\"></div></div><div class=\"relative flex justify-center text-sm\"><span class=\"px-2 bg-card text-muted-foreground\">Or continue with</span></div></div><!-- Social Login --> <div class=\"grid grid-cols-2 gap-3\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Var5 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
					templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
					templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
					if !templ_7745c5c3_IsBuffer {
						defer func() {
							templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
							if templ_7745c5c3_Err == nil {
								templ_7745c5c3_Err = templ_7745c5c3_BufErr
							}
						}()
					}
					ctx = templ.InitializeContext(ctx)
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<svg class=\"w-5 h-5\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"></path> <path fill=\"currentColor\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"></path> <path fill=\"currentColor\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"></path> <path fill=\"currentColor\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"></path></svg> <span class=\"text-sm font-medium\">Google</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					return nil
				})
				templ_7745c5c3_Err = button.Button(button.Props{
					Variant: button.VariantOutline,
					Class:   "py-3",
				}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var5), templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Var6 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
					templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
					templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
					if !templ_7745c5c3_IsBuffer {
						defer func() {
							templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
							if templ_7745c5c3_Err == nil {
								templ_7745c5c3_Err = templ_7745c5c3_BufErr
							}
						}()
					}
					ctx = templ.InitializeContext(ctx)
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\"><path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.024-.105-.949-.199-2.403.042-3.441.219-.937 1.407-5.965 1.407-5.965s-.359-.719-.359-1.782c0-1.668.967-2.914 2.171-2.914 1.023 0 1.518.769 1.518 1.69 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.097.118.112.222.083.343-.09.369-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.845-1.378l-.759 2.893c-.276 1.071-1.009 2.422-1.522 3.256 1.143.35 2.738.542 4.217.542 6.624 0 11.99-5.367 11.99-11.987C24.007 5.367 18.641.001 12.017.001z\"></path></svg> <span class=\"text-sm font-medium\">LinkedIn</span>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					return nil
				})
				templ_7745c5c3_Err = button.Button(button.Props{
					Variant: button.VariantOutline,
					Class:   "py-3",
				}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var6), templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return nil
			})
			templ_7745c5c3_Err = card.Content(card.ContentProps{Class: "space-y-6"}).Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = card.Card().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<!-- Sign In Link --><div class=\"text-center\"><span class=\"text-muted-foreground text-sm\">Already have an account? </span> <a href=\"/auth/signin\" class=\"text-blue-600 hover:text-blue-700 font-medium text-sm\">Sign in</a></div></div></div></div><script>\n\t\tfunction togglePasswordVisibility(inputId) {\n\t\t\tconst input = document.getElementById(inputId);\n\t\t\tconst eyeClosed = document.getElementById('signup-eye-closed');\n\t\t\tconst eyeOpen = document.getElementById('signup-eye-open');\n\t\t\t\n\t\t\tif (input.type === 'password') {\n\t\t\t\tinput.type = 'text';\n\t\t\t\teyeClosed.classList.add('hidden');\n\t\t\t\teyeOpen.classList.remove('hidden');\n\t\t\t} else {\n\t\t\t\tinput.type = 'password';\n\t\t\t\teyeClosed.classList.remove('hidden');\n\t\t\t\teyeOpen.classList.add('hidden');\n\t\t\t}\n\t\t}\n\n\t\t// Password validation\n\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\tconst password = document.getElementById('signup-password');\n\t\t\tconst confirmPassword = document.getElementById('confirm-password');\n\t\t\t\n\t\t\tfunction validatePassword() {\n\t\t\t\tconst passwordValue = password.value;\n\t\t\t\tconst confirmValue = confirmPassword.value;\n\t\t\t\t\n\t\t\t\t// Check if passwords match\n\t\t\t\tif (confirmValue && passwordValue !== confirmValue) {\n\t\t\t\t\tconfirmPassword.setCustomValidity(\"Passwords don't match\");\n\t\t\t\t} else {\n\t\t\t\t\tconfirmPassword.setCustomValidity(\"\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Check password strength\n\t\t\t\tif (passwordValue && passwordValue.length < 8) {\n\t\t\t\t\tpassword.setCustomValidity(\"Password must be at least 8 characters\");\n\t\t\t\t} else {\n\t\t\t\t\tpassword.setCustomValidity(\"\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tpassword.addEventListener('input', validatePassword);\n\t\t\tconfirmPassword.addEventListener('input', validatePassword);\n\t\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
