// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package results

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

// StreamingData represents the parsed streaming data from SSE
type StreamingData struct {
	CityData          *CityData        `json:"general_city_data,omitempty"`
	PointsOfInterest  []POIStreamData  `json:"points_of_interest,omitempty"`
	ItineraryResponse *ItineraryStream `json:"itinerary_response,omitempty"`
	SessionID         string           `json:"session_id,omitempty"`
}

// CityData represents city information from streaming data
type CityData struct {
	City            string  `json:"city"`
	Country         string  `json:"country"`
	StateProvince   string  `json:"state_province"`
	Description     string  `json:"description"`
	CenterLatitude  float64 `json:"center_latitude"`
	CenterLongitude float64 `json:"center_longitude"`
	Population      string  `json:"population"`
	Area            string  `json:"area"`
	Timezone        string  `json:"timezone"`
	Language        string  `json:"language"`
	Weather         string  `json:"weather"`
	Attractions     string  `json:"attractions"`
	History         string  `json:"history"`
}

// POIStreamData represents POI data from streaming
type POIStreamData struct {
	ID             string  `json:"id,omitempty"`
	Name           string  `json:"name"`
	Latitude       float64 `json:"latitude"`
	Longitude      float64 `json:"longitude"`
	Category       string  `json:"category"`
	DescriptionPOI string  `json:"description_poi"`
	Address        string  `json:"address"`
	Website        string  `json:"website"`
	OpeningHours   string  `json:"opening_hours"`
	Distance       float64 `json:"distance,omitempty"`
}

// ItineraryStream represents the itinerary response part
type ItineraryStream struct {
	ItineraryName      string          `json:"itinerary_name"`
	OverallDescription string          `json:"overall_description"`
	PointsOfInterest   []POIStreamData `json:"points_of_interest"`
}

func ItineraryResultsStream(sessionID, cityName, originalQuery string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"min-h-screen bg-gray-50 dark:bg-gray-900\" id=\"itinerary-results-container\"><!-- Header --><div class=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 px-4 py-3 sm:px-6 sm:py-4\"><div class=\"max-w-7xl mx-auto\"><div class=\"flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between\"><div><h1 class=\"text-xl font-bold text-gray-900 dark:text-white sm:text-2xl\" id=\"itinerary-title\">Planning your ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(cityName)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/internal/features/results/itinerary_results_stream.templ`, Line: 57, Col: 31}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " adventure...</h1><p class=\"text-sm text-gray-600 dark:text-gray-300 mt-1 sm:text-base\" id=\"itinerary-description\">AI is creating your personalized itinerary</p></div><div class=\"flex flex-col gap-2 sm:flex-row sm:items-center sm:gap-3\"><!-- View Mode Toggle - Initially Hidden --><div id=\"view-mode-controls\" class=\"hidden flex bg-gray-100 rounded-lg p-1 w-full sm:w-auto\"><button id=\"view-mode-map\" class=\"flex-1 px-3 py-1 rounded text-sm font-medium transition-colors sm:flex-initial text-gray-600 hover:bg-white\" onclick=\"setViewMode('map')\" title=\"Show only map\">Map</button> <button id=\"view-mode-split\" class=\"flex-1 px-3 py-1 rounded text-sm font-medium transition-colors sm:flex-initial bg-white text-gray-900 shadow-sm\" onclick=\"setViewMode('split')\" title=\"Split view: Map + Cards\">Split</button> <button id=\"view-mode-list\" class=\"flex-1 px-3 py-1 rounded text-sm font-medium transition-colors sm:flex-initial text-gray-600 hover:bg-white\" onclick=\"setViewMode('list')\" title=\"Show only cards\">List</button></div><!-- Action Buttons - Initially Hidden --><div id=\"action-buttons\" class=\"hidden flex flex-col gap-2 sm:flex-row sm:gap-3\"><button id=\"continue-planning-btn\" class=\"hidden flex items-center justify-center gap-2 px-4 py-2 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-lg hover:from-blue-700 hover:to-blue-800 transition-all shadow-sm text-sm font-medium\"><svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-3.582 8-8 8a8.025 8.025 0 01-2.287-.32c-1.183.45-2.477.32-3.563-.207a3.892 3.892 0 01-2.563-3.563c-.527-1.086-.657-2.38-.207-3.563A8.025 8.025 0 014 12C4 7.582 7.582 4 12 4s8 3.582 8 8z\"></path></svg> Continue Planning</button></div></div></div></div></div><!-- Streaming Status --><div id=\"streaming-status\" class=\"bg-gradient-to-r from-blue-50 to-purple-50 dark:from-gray-800 dark:to-gray-700 border-b border-blue-200 dark:border-gray-600\"><div class=\"max-w-7xl mx-auto px-4 py-6 sm:px-6\"><div class=\"flex items-center gap-4\"><div class=\"w-10 h-10 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center\"><svg class=\"w-5 h-5 text-white animate-pulse\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"></path></svg></div><div class=\"flex-1\"><h3 class=\"font-semibold text-blue-800 dark:text-blue-200 mb-2\">AI is creating your personalized itinerary...</h3><div class=\"space-y-2\"><div class=\"flex items-center gap-3 text-blue-700 dark:text-blue-300\"><div id=\"loading-spinner\" class=\"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\"></div><span id=\"status-text\" class=\"text-sm\">Processing your request...</span></div><div id=\"streaming-progress\" class=\"text-sm text-blue-600 dark:text-blue-400 space-y-1\"><div class=\"text-xs opacity-75\">Starting AI analysis...</div></div></div></div></div></div></div><!-- City Information - Initially Hidden --><div id=\"city-info-section\" class=\"hidden bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\"><div class=\"max-w-7xl mx-auto px-4 py-6 sm:px-6\"><div class=\"grid gap-6 lg:grid-cols-3\"><!-- City Information --><div class=\"lg:col-span-2\"><div class=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\"><h2 id=\"city-title\" class=\"text-xl font-bold text-gray-900 dark:text-white mb-3 flex items-center gap-2\"><svg class=\"w-5 h-5 text-blue-600 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path> <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path></svg> About ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(cityName)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `app/internal/features/results/itinerary_results_stream.templ`, Line: 128, Col: 24}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</h2><p id=\"city-description\" class=\"text-gray-700 dark:text-gray-300 text-sm leading-relaxed mb-6\">Loading city information...</p><div id=\"city-details\" class=\"grid grid-cols-1 sm:grid-cols-2 gap-4\"><!-- City details will be populated here --></div></div></div><!-- Quick Stats --><div class=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6\"><h3 class=\"font-semibold text-gray-900 dark:text-white mb-4 flex items-center gap-2\"><svg class=\"w-4 h-4 text-blue-600 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"></path></svg> Quick Stats</h3><div id=\"quick-stats\" class=\"space-y-4\"><div class=\"flex items-center justify-between p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\"><span class=\"text-sm text-gray-700 dark:text-gray-300\">Places to explore</span> <span id=\"poi-count\" class=\"font-semibold text-blue-600 dark:text-blue-400\">Loading...</span></div><div class=\"flex items-center justify-between p-3 bg-green-50 dark:bg-green-900/20 rounded-lg\"><span class=\"text-sm text-gray-700 dark:text-gray-300\">In your itinerary</span> <span id=\"itinerary-count\" class=\"font-semibold text-green-600 dark:text-green-400\">Loading...</span></div></div></div></div></div></div><!-- Main Content --><div class=\"max-w-7xl mx-auto px-4 py-4 sm:px-6 sm:py-6\"><!-- Map Container - Initially Hidden --><div id=\"map-container\" class=\"hidden w-full h-[400px] sm:h-[500px] mb-6\"><div class=\"w-full h-full bg-gray-100 rounded-lg flex items-center justify-center\"><div class=\"text-center\"><svg class=\"w-8 h-8 animate-spin mx-auto mb-2 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path></svg><p class=\"text-sm text-gray-600\">Loading map...</p></div></div></div><!-- Results Container --><div id=\"results-container\" class=\"space-y-6\"><!-- Loading State --><div id=\"loading-cards\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for i := 0; i < 6; i++ {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<div class=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 animate-pulse\"><div class=\"flex items-start gap-3\"><div class=\"w-12 h-12 bg-gray-300 dark:bg-gray-600 rounded-full\"></div><div class=\"flex-1 space-y-2\"><div class=\"h-4 bg-gray-300 dark:bg-gray-600 rounded w-3/4\"></div><div class=\"h-3 bg-gray-300 dark:bg-gray-600 rounded w-1/2\"></div><div class=\"h-3 bg-gray-300 dark:bg-gray-600 rounded w-full\"></div></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div><!-- Actual Results - Initially Hidden --><div id=\"itinerary-results\" class=\"hidden\"><div class=\"flex flex-col gap-2 sm:flex-row sm:items-center sm:justify-between mb-6\"><div><div class=\"flex items-center gap-2\"><h2 class=\"text-lg font-semibold text-gray-900 dark:text-white\">Your Curated Itinerary</h2><div id=\"updating-indicator\" class=\"hidden flex items-center gap-2 text-sm text-blue-600 dark:text-blue-400\"><svg class=\"w-4 h-4 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path></svg> <span>Updating...</span></div></div><p class=\"text-sm text-gray-600 dark:text-gray-300\">Personalized places to visit based on your preferences</p></div></div><div id=\"poi-cards-container\" class=\"space-y-4\"><!-- POI cards will be generated here --></div></div></div></div></div><script type=\"text/javascript\">\n\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t// Initialize streaming data\n\t\tvar streamingData = {\n\t\t\tcityData: null,\n\t\t\tpointsOfInterest: [],\n\t\t\titineraryResponse: null,\n\t\t\tsessionId: '{ sessionID }'\n\t\t};\n\t\t\n\t\tvar currentViewMode = 'split';\n\t\tvar isStreamingComplete = false;\n\t\tvar chunkAccumulator = {\n\t\t\tcity_data: '',\n\t\t\tgeneral_pois: '',\n\t\t\titinerary: ''\n\t\t};\n\t\t\n\t\t// Set up SSE connection\n\t\tfunction setupSSEConnection() {\n\t\t\tvar eventSource = new EventSource('/chat/stream?session_id={ sessionID }&dashboard-search={ originalQuery }');\n\t\t\tvar isNavigationHandled = false;\n\t\t\t\n\t\t\teventSource.onmessage = function(event) {\n\t\t\t\ttry {\n\t\t\t\t\tvar eventData = JSON.parse(event.data);\n\t\t\t\t\tconsole.log('SSE Event:', eventData);\n\t\t\t\t\t\n\t\t\t\t\thandleStreamEvent(eventData);\n\t\t\t\t\t\n\t\t\t\t\t// Handle navigation on completion\n\t\t\t\t\tif (eventData.type === 'complete' && eventData.navigation && !isNavigationHandled) {\n\t\t\t\t\t\tisNavigationHandled = true;\n\t\t\t\t\t\thandleStreamComplete(eventData);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('Error parsing SSE event:', error);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\teventSource.onerror = function(error) {\n\t\t\t\tconsole.error('SSE Error:', error);\n\t\t\t\teventSource.close();\n\t\t\t\thandleStreamError();\n\t\t\t};\n\t\t\t\n\t\t\t// Close connection when page unloads\n\t\t\twindow.addEventListener('beforeunload', function() {\n\t\t\t\teventSource.close();\n\t\t\t});\n\t\t\t\n\t\t\treturn eventSource;\n\t\t}\n\t\t\n\t\t// Handle individual stream events\n\t\tfunction handleStreamEvent(event) {\n\t\t\tvar statusText = document.getElementById('status-text');\n\t\t\tvar streamingProgress = document.getElementById('streaming-progress');\n\t\t\t\n\t\t\tswitch (event.type) {\n\t\t\t\tcase 'start':\n\t\t\t\t\tif (statusText) statusText.textContent = 'AI analysis started...';\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase 'chunk':\n\t\t\t\t\tif (event.data && event.data.part) {\n\t\t\t\t\t\tupdateStreamingProgress(event.data.part, event.data.chunk);\n\t\t\t\t\t\tparseChunkData(event.data);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase 'complete':\n\t\t\t\t\thandleStreamComplete(event);\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase 'error':\n\t\t\t\t\tconsole.error('Stream error:', event.message);\n\t\t\t\t\thandleStreamError(event.message);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Update streaming progress indicator\n\t\tfunction updateStreamingProgress(part, chunk) {\n\t\t\tvar streamingProgress = document.getElementById('streaming-progress');\n\t\t\tvar statusText = document.getElementById('status-text');\n\t\t\t\n\t\t\tif (!streamingProgress || !statusText) return;\n\t\t\t\n\t\t\t// Update status based on part\n\t\t\tswitch (part) {\n\t\t\t\tcase 'city_data':\n\t\t\t\t\tstatusText.textContent = 'Gathering city information...';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'general_pois':\n\t\t\t\t\tstatusText.textContent = 'Finding points of interest...';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'itinerary':\n\t\t\t\t\tstatusText.textContent = 'Creating your personalized itinerary...';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\t// Add progress updates\n\t\t\tvar progressDiv = document.createElement('div');\n\t\t\tprogressDiv.className = 'text-xs opacity-75';\n\t\t\tprogressDiv.textContent = 'Processing ' + part + '...';\n\t\t\tstreamingProgress.appendChild(progressDiv);\n\t\t\t\n\t\t\t// Keep only last 5 progress updates\n\t\t\tvar progressItems = streamingProgress.children;\n\t\t\tif (progressItems.length > 5) {\n\t\t\t\tstreamingProgress.removeChild(progressItems[0]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Parse chunk data and accumulate\n\t\tfunction parseChunkData(data) {\n\t\t\tif (!data.chunk || !data.part) return;\n\t\t\t\n\t\t\t// Accumulate chunks by part\n\t\t\tchunkAccumulator[data.part] += data.chunk;\n\t\t\t\n\t\t\t// Try to parse accumulated JSON\n\t\t\ttryParseAccumulatedData(data.part);\n\t\t}\n\t\t\n\t\t// Try to parse accumulated chunk data\n\t\tfunction tryParseAccumulatedData(part) {\n\t\t\tvar accumulated = chunkAccumulator[part];\n\t\t\t\n\t\t\t// Look for complete JSON objects\n\t\t\tvar jsonStart = accumulated.indexOf('{');\n\t\t\tvar jsonEnd = accumulated.lastIndexOf('}');\n\t\t\t\n\t\t\tif (jsonStart !== -1 && jsonEnd !== -1 && jsonEnd > jsonStart) {\n\t\t\t\tvar jsonStr = accumulated.slice(jsonStart, jsonEnd + 1);\n\t\t\t\t\n\t\t\t\t// Remove markdown code blocks if present\n\t\t\t\tjsonStr = jsonStr.replace(/```json\\n?/g, '').replace(/```\\n?/g, '');\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tvar parsed = JSON.parse(jsonStr);\n\t\t\t\t\t\n\t\t\t\t\tswitch (part) {\n\t\t\t\t\t\tcase 'city_data':\n\t\t\t\t\t\t\tif (parsed.city) {\n\t\t\t\t\t\t\t\tstreamingData.cityData = parsed;\n\t\t\t\t\t\t\t\tupdateCityInfo(parsed);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tcase 'general_pois':\n\t\t\t\t\t\t\tif (parsed.points_of_interest && Array.isArray(parsed.points_of_interest)) {\n\t\t\t\t\t\t\t\tstreamingData.pointsOfInterest = parsed.points_of_interest;\n\t\t\t\t\t\t\t\tupdateQuickStats();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tcase 'itinerary':\n\t\t\t\t\t\t\tif (parsed.itinerary_name || parsed.points_of_interest) {\n\t\t\t\t\t\t\t\tstreamingData.itineraryResponse = parsed;\n\t\t\t\t\t\t\t\tupdateItineraryInfo(parsed);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.warn('Could not parse ' + part + ' JSON:', error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Update city information display\n\t\tfunction updateCityInfo(cityData) {\n\t\t\tvar cityTitle = document.getElementById('city-title');\n\t\t\tvar cityDescription = document.getElementById('city-description');\n\t\t\tvar cityDetails = document.getElementById('city-details');\n\t\t\tvar cityInfoSection = document.getElementById('city-info-section');\n\t\t\t\n\t\t\tif (cityTitle && cityData.city) {\n\t\t\t\tcityTitle.innerHTML = '<svg class=\"w-5 h-5 text-blue-600 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path></svg>About ' + cityData.city;\n\t\t\t}\n\t\t\t\n\t\t\tif (cityDescription && cityData.description) {\n\t\t\t\tcityDescription.textContent = cityData.description;\n\t\t\t}\n\t\t\t\n\t\t\tif (cityInfoSection) {\n\t\t\t\tcityInfoSection.classList.remove('hidden');\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Update itinerary information\n\t\tfunction updateItineraryInfo(itineraryData) {\n\t\t\tvar itineraryTitle = document.getElementById('itinerary-title');\n\t\t\tvar itineraryDescription = document.getElementById('itinerary-description');\n\t\t\t\n\t\t\t// Parse itinerary name if it's JSON\n\t\t\tvar parsedName = itineraryData.itinerary_name;\n\t\t\tif (typeof parsedName === 'string' && parsedName.indexOf('{') === 0) {\n\t\t\t\ttry {\n\t\t\t\t\tvar parsed = JSON.parse(parsedName);\n\t\t\t\t\tparsedName = parsed.itinerary_name || parsed.name || parsedName;\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Keep original if parsing fails\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (itineraryTitle && parsedName) {\n\t\t\t\titineraryTitle.textContent = parsedName;\n\t\t\t}\n\t\t\t\n\t\t\tif (itineraryDescription && itineraryData.overall_description) {\n\t\t\t\tvar cityInfo = streamingData.cityData;\n\t\t\t\tvar cityName = cityInfo ? cityInfo.city : '{ cityName }';\n\t\t\t\tvar countryName = cityInfo ? cityInfo.country : '';\n\t\t\t\titineraryDescription.textContent = cityName + (countryName ? ', ' + countryName : '') + ' • Personalized itinerary';\n\t\t\t}\n\t\t\t\n\t\t\t// Generate POI cards if we have them\n\t\t\tif (itineraryData.points_of_interest && Array.isArray(itineraryData.points_of_interest)) {\n\t\t\t\tgeneratePOICards(itineraryData.points_of_interest);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Update quick stats\n\t\tfunction updateQuickStats() {\n\t\t\tvar poiCount = document.getElementById('poi-count');\n\t\t\tvar itineraryCount = document.getElementById('itinerary-count');\n\t\t\t\n\t\t\tif (poiCount) {\n\t\t\t\tvar generalPOIs = streamingData.pointsOfInterest.length;\n\t\t\t\tpoiCount.textContent = generalPOIs.toString();\n\t\t\t}\n\t\t\t\n\t\t\tif (itineraryCount) {\n\t\t\t\tvar itineraryPOIs = streamingData.itineraryResponse && streamingData.itineraryResponse.points_of_interest ? streamingData.itineraryResponse.points_of_interest.length : 0;\n\t\t\t\titineraryCount.textContent = itineraryPOIs.toString();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Generate POI cards\n\t\tfunction generatePOICards(pois) {\n\t\t\tvar container = document.getElementById('poi-cards-container');\n\t\t\tvar resultsContainer = document.getElementById('itinerary-results');\n\t\t\t\n\t\t\tif (!container || !pois.length) return;\n\t\t\t\n\t\t\tcontainer.innerHTML = '';\n\t\t\t\n\t\t\tfor (var i = 0; i < pois.length; i++) {\n\t\t\t\tvar poi = pois[i];\n\t\t\t\tvar card = createPOICard(poi, i + 1);\n\t\t\t\tcontainer.appendChild(card);\n\t\t\t}\n\t\t\t\n\t\t\t// Show results container\n\t\t\tif (resultsContainer) {\n\t\t\t\tresultsContainer.classList.remove('hidden');\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Create POI card element\n\t\tfunction createPOICard(poi, priority) {\n\t\t\tvar card = document.createElement('div');\n\t\t\tcard.className = 'bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 hover:shadow-md transition-all cursor-pointer';\n\t\t\t\n\t\t\t// Generate category emoji and color\n\t\t\tvar categoryInfo = getCategoryInfo(poi.category);\n\t\t\tvar hasValidCoordinates = poi.latitude && poi.longitude && !isNaN(poi.latitude) && !isNaN(poi.longitude);\n\t\t\t\n\t\t\tcard.innerHTML = '<div class=\"flex items-start gap-3\">' +\n\t\t\t\t'<div class=\"flex-shrink-0\">' +\n\t\t\t\t'<div class=\"w-12 h-12 rounded-full ' + categoryInfo.color + ' flex items-center justify-center text-white font-bold text-lg\">' +\n\t\t\t\tcategoryInfo.emoji +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div class=\"flex-1 min-w-0\">' +\n\t\t\t\t'<div class=\"flex items-start justify-between mb-2\">' +\n\t\t\t\t'<div class=\"flex-1\">' +\n\t\t\t\t'<h4 class=\"font-semibold text-lg text-gray-900 dark:text-white mb-1 cursor-pointer hover:text-blue-600 transition-colors\">' +\n\t\t\t\tpoi.name +\n\t\t\t\t'</h4>' +\n\t\t\t\t'<div class=\"flex flex-wrap items-center gap-2 mb-2\">' +\n\t\t\t\t'<span class=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-xs font-medium\">📍 ' + poi.category + '</span>' +\n\t\t\t\t(!hasValidCoordinates ? '<span class=\"px-2 py-1 bg-yellow-100 text-yellow-800 rounded-full text-xs\">📍 Location TBD</span>' : '') +\n\t\t\t\t'<span class=\"px-2 py-1 bg-purple-100 text-purple-700 rounded-full text-xs\">🕒 1-2 hours</span>' +\n\t\t\t\t'<span class=\"px-2 py-1 bg-green-100 text-green-700 rounded-full text-xs\">💶 Moderate</span>' +\n\t\t\t\t'</div>' +\n\t\t\t\t(poi.address ? '<p class=\"text-sm text-gray-600 dark:text-gray-300 flex items-center mb-1\"><svg class=\"w-4 h-4 mr-1 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path></svg>' + poi.address + '</p>' : '') +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div class=\"flex items-center gap-1 bg-yellow-50 px-2 py-1 rounded-full border border-yellow-200 ml-2\">' +\n\t\t\t\t'<svg class=\"w-3 h-3 text-yellow-500 fill-current\" viewBox=\"0 0 24 24\"><path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/></svg>' +\n\t\t\t\t'<span class=\"text-yellow-800 font-medium text-xs\">4.5</span>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>' +\n\t\t\t\t(poi.description_poi ? '<p class=\"text-sm text-gray-600 dark:text-gray-300 mb-3\">' + poi.description_poi + '</p>' : '') +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>';\n\t\t\t\n\t\t\treturn card;\n\t\t}\n\t\t\n\t\t// Get category information\n\t\tfunction getCategoryInfo(category) {\n\t\t\tvar categoryLower = (category || '').toLowerCase();\n\t\t\t\n\t\t\tif (categoryLower.indexOf('museum') !== -1 || categoryLower.indexOf('cultural') !== -1) {\n\t\t\t\treturn { emoji: '🏛️', color: 'bg-purple-500' };\n\t\t\t}\n\t\t\tif (categoryLower.indexOf('park') !== -1 || categoryLower.indexOf('garden') !== -1) {\n\t\t\t\treturn { emoji: '🌳', color: 'bg-green-500' };\n\t\t\t}\n\t\t\tif (categoryLower.indexOf('restaurant') !== -1 || categoryLower.indexOf('food') !== -1) {\n\t\t\t\treturn { emoji: '🍽️', color: 'bg-orange-500' };\n\t\t\t}\n\t\t\tif (categoryLower.indexOf('hotel') !== -1 || categoryLower.indexOf('accommodation') !== -1) {\n\t\t\t\treturn { emoji: '🏨', color: 'bg-blue-500' };\n\t\t\t}\n\t\t\tif (categoryLower.indexOf('religious') !== -1 || categoryLower.indexOf('church') !== -1) {\n\t\t\t\treturn { emoji: '⛪', color: 'bg-indigo-500' };\n\t\t\t}\n\t\t\tif (categoryLower.indexOf('landmark') !== -1 || categoryLower.indexOf('architecture') !== -1) {\n\t\t\t\treturn { emoji: '🏛️', color: 'bg-gray-500' };\n\t\t\t}\n\t\t\t\n\t\t\treturn { emoji: '📍', color: 'bg-blue-500' };\n\t\t}\n\t\t\n\t\t// Handle stream completion\n\t\tfunction handleStreamComplete(event) {\n\t\t\tisStreamingComplete = true;\n\t\t\t\n\t\t\t// Hide streaming status\n\t\t\tvar streamingStatus = document.getElementById('streaming-status');\n\t\t\tvar loadingCards = document.getElementById('loading-cards');\n\t\t\t\n\t\t\tif (streamingStatus) {\n\t\t\t\tstreamingStatus.style.display = 'none';\n\t\t\t}\n\t\t\t\n\t\t\tif (loadingCards) {\n\t\t\t\tloadingCards.style.display = 'none';\n\t\t\t}\n\t\t\t\n\t\t\t// Show completed UI elements\n\t\t\tshowCompletedUI();\n\t\t\t\n\t\t\t// Handle navigation if provided\n\t\t\tif (event.navigation && event.navigation.url) {\n\t\t\t\t// Update URL without reload\n\t\t\t\twindow.history.replaceState({}, '', event.navigation.url);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Handle stream error\n\t\tfunction handleStreamError(message) {\n\t\t\tif (!message) message = 'An error occurred while processing your request';\n\t\t\t\n\t\t\tvar streamingStatus = document.getElementById('streaming-status');\n\t\t\tvar statusText = document.getElementById('status-text');\n\t\t\tvar loadingSpinner = document.getElementById('loading-spinner');\n\t\t\t\n\t\t\tif (streamingStatus) {\n\t\t\t\tstreamingStatus.className = 'bg-gradient-to-r from-red-50 to-pink-50 dark:from-red-900/20 dark:to-pink-900/20 border-b border-red-200 dark:border-red-600';\n\t\t\t}\n\t\t\t\n\t\t\tif (statusText) {\n\t\t\t\tstatusText.textContent = message;\n\t\t\t\tstatusText.className = 'text-sm text-red-600 dark:text-red-400';\n\t\t\t}\n\t\t\t\n\t\t\tif (loadingSpinner) {\n\t\t\t\tloadingSpinner.style.display = 'none';\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Show completed UI elements\n\t\tfunction showCompletedUI() {\n\t\t\tvar viewModeControls = document.getElementById('view-mode-controls');\n\t\t\tvar actionButtons = document.getElementById('action-buttons');\n\t\t\tvar mapContainer = document.getElementById('map-container');\n\t\t\tvar continuePlanningBtn = document.getElementById('continue-planning-btn');\n\t\t\t\n\t\t\tif (viewModeControls) viewModeControls.classList.remove('hidden');\n\t\t\tif (actionButtons) actionButtons.classList.remove('hidden');\n\t\t\tif (continuePlanningBtn) continuePlanningBtn.classList.remove('hidden');\n\t\t\t\n\t\t\t// Show map in split or map mode\n\t\t\tif (currentViewMode === 'split' || currentViewMode === 'map') {\n\t\t\t\tif (mapContainer) {\n\t\t\t\t\tmapContainer.classList.remove('hidden');\n\t\t\t\t\tinitializeMap();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// View mode functions\n\t\twindow.setViewMode = function(mode) {\n\t\t\tcurrentViewMode = mode;\n\t\t\tvar mapContainer = document.getElementById('map-container');\n\t\t\tvar resultsContainer = document.getElementById('results-container');\n\t\t\t\n\t\t\t// Update button states\n\t\t\tvar viewModeButtons = document.querySelectorAll('[id^=\"view-mode-\"]');\n\t\t\tfor (var i = 0; i < viewModeButtons.length; i++) {\n\t\t\t\tviewModeButtons[i].className = 'flex-1 px-3 py-1 rounded text-sm font-medium transition-colors sm:flex-initial text-gray-600 hover:bg-white';\n\t\t\t}\n\t\t\tvar activeButton = document.getElementById('view-mode-' + mode);\n\t\t\tif (activeButton) {\n\t\t\t\tactiveButton.className = 'flex-1 px-3 py-1 rounded text-sm font-medium transition-colors sm:flex-initial bg-white text-gray-900 shadow-sm';\n\t\t\t}\n\t\t\t\n\t\t\t// Show/hide containers based on mode\n\t\t\tswitch (mode) {\n\t\t\t\tcase 'map':\n\t\t\t\t\tif (mapContainer) mapContainer.classList.remove('hidden');\n\t\t\t\t\tif (resultsContainer) resultsContainer.style.display = 'none';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'list':\n\t\t\t\t\tif (mapContainer) mapContainer.classList.add('hidden');\n\t\t\t\t\tif (resultsContainer) resultsContainer.style.display = 'block';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'split':\n\t\t\t\t\tif (mapContainer) mapContainer.classList.remove('hidden');\n\t\t\t\t\tif (resultsContainer) resultsContainer.style.display = 'block';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\t// Initialize map if needed\n\t\t\tif ((mode === 'map' || mode === 'split') && isStreamingComplete) {\n\t\t\t\tinitializeMap();\n\t\t\t}\n\t\t};\n\t\t\n\t\t// Initialize map (placeholder - replace with actual map implementation)\n\t\tfunction initializeMap() {\n\t\t\tvar mapContainer = document.getElementById('map-container');\n\t\t\tif (!mapContainer || !streamingData.cityData) return;\n\t\t\t\n\t\t\t// Replace with actual map implementation\n\t\t\tmapContainer.innerHTML = '<div class=\"w-full h-full bg-gray-100 rounded-lg flex items-center justify-center\">' +\n\t\t\t\t'<div class=\"text-center\">' +\n\t\t\t\t'<svg class=\"w-8 h-8 mx-auto mb-2 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">' +\n\t\t\t\t'<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path>' +\n\t\t\t\t'<path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path>' +\n\t\t\t\t'</svg>' +\n\t\t\t\t'<p class=\"text-sm text-gray-600\">Map for ' + streamingData.cityData.city + '</p>' +\n\t\t\t\t'<p class=\"text-xs text-gray-500\">Center: ' + streamingData.cityData.center_latitude + ', ' + streamingData.cityData.center_longitude + '</p>' +\n\t\t\t\t'</div>' +\n\t\t\t\t'</div>';\n\t\t}\n\t\t\n\t\t// Initialize page\n\t\tconsole.log('Initializing streaming itinerary page');\n\t\tsetupSSEConnection();\n\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
