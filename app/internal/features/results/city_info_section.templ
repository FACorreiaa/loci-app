package results

import (
	"fmt"
	"github.com/FACorreiaa/go-templui/app/internal/models"
	"strconv"
)

// CityInformationSection displays city overview with statistics and quick facts
templ CityInformationSection(cityData models.GeneralCityData, generalPois []models.POIDetailedInfo) {
	<div class="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700">
		<div class="max-w-7xl mx-auto px-4 py-6 sm:px-6">
			<div class="grid grid-cols-1 gap-6 lg:grid-cols-3">
				<!-- City Overview -->
				<div class="lg:col-span-2">
					<div class="flex items-start gap-4">
						<!-- City image placeholder since ImageURL field doesn't exist -->
						<div class="w-20 h-20 rounded-lg bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center flex-shrink-0 sm:w-24 sm:h-24">
							<svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
							</svg>
						</div>
						<div class="flex-1 min-w-0">
							<div class="flex items-center gap-2 mb-2">
								<svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
								</svg>
								<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
									{ cityData.City }, { cityData.Country }
								</h3>
							</div>
							if cityData.Description != "" {
								<p class="text-sm text-gray-600 dark:text-gray-300 mb-3 line-clamp-3">
									{ cityData.Description }
								</p>
							}
							<!-- Quick Facts -->
							<div class="flex flex-wrap gap-2">
								if cityData.Population != "" {
									<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
										Population: { cityData.Population }
									</span>
								}
								if cityData.Area != "" {
									<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
										Area: { cityData.Area }
									</span>
								}
								if cityData.Timezone != "" {
									<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
										{ cityData.Timezone }
									</span>
								}
								if cityData.Language != "" {
									<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
										{ cityData.Language }
									</span>
								}
							</div>
						</div>
					</div>
				</div>
				<!-- Statistics -->
				<div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4">
					<h4 class="text-sm font-medium text-gray-900 dark:text-white mb-3">
						Your Itinerary Stats
					</h4>
					<div class="space-y-2">
						<div class="flex justify-between items-center">
							<span class="text-sm text-gray-600 dark:text-gray-300">Places to Visit</span>
							<span class="text-sm font-medium text-gray-900 dark:text-white">
								{ strconv.Itoa(len(generalPois)) }
							</span>
						</div>
						<div class="flex justify-between items-center">
							<span class="text-sm text-gray-600 dark:text-gray-300">Categories</span>
							<span class="text-sm font-medium text-gray-900 dark:text-white">
								{ strconv.Itoa(countUniqueCategories(generalPois)) }
							</span>
						</div>
						if cityData.CenterLatitude != 0 && cityData.CenterLongitude != 0 {
							<div class="pt-2 mt-2 border-t border-gray-200 dark:border-gray-600">
								<div class="flex justify-between items-center text-xs">
									<span class="text-gray-500">Coordinates</span>
									<span class="text-gray-500 font-mono">
										{ fmt.Sprintf("%.4f, %.4f", cityData.CenterLatitude, cityData.CenterLongitude) }
									</span>
								</div>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	</div>
}

// Helper function to count unique categories
func countUniqueCategories(pois []models.POIDetailedInfo) int {
	categories := make(map[string]bool)
	for _, poi := range pois {
		if poi.Category != "" {
			categories[poi.Category] = true
		}
	}
	return len(categories)
}
