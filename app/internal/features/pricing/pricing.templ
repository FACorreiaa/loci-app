package pricing

templ PricingPage() {
	<div class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900">
		<div class="max-w-7xl mx-auto px-4 py-12">
			<!-- Hero Section -->
			<header class="text-center mb-16">
				<h1 class="text-4xl md:text-6xl font-bold text-foreground mb-6">
					Simple <span class="text-blue-600 dark:text-blue-400">Pricing</span>
				</h1>
				<p class="text-xl text-muted-foreground max-w-3xl mx-auto leading-relaxed mb-8">
					Choose the perfect plan for your exploration needs. Start free and upgrade anytime as you discover more.
				</p>
				<div class="inline-flex items-center bg-green-100 dark:bg-green-900/50 text-green-800 dark:text-green-200 px-4 py-2 rounded-full text-sm font-medium border border-green-200 dark:border-green-800">
					<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
					</svg>
					30-day money-back guarantee on all paid plans
				</div>
			</header>
			<!-- Pricing Cards -->
			<section class="grid md:grid-cols-3 gap-8 mb-20">
				@PricingCard(PricingPlan{
					Name:        "Free",
					Price:       "$0",
					Period:      "forever",
					Description: "Perfect for casual explorers",
					Color:       "gray",
					Popular:     false,
					Disabled:    false,
					Features: []string{
						"Core AI recommendations",
						"Basic preference filters",
						"Up to 10 saved locations",
						"Interactive map view",
						"Mobile-optimized experience",
						"Community support",
					},
					Limitations: []string{
						"Limited to 5 searches per day",
						"Basic filtering options only",
						"Non-intrusive contextual ads",
					},
					CTA: "Get Started Free",
				})
				@PricingCard(PricingPlan{
					Name:        "Explorer",
					Price:       "$5.99",
					Period:      "per month",
					Description: "For regular city discoverers",
					Color:       "blue",
					Popular:     true,
					Disabled:    false,
					Features: []string{
						"Everything in Free",
						"Unlimited searches & recommendations",
						"Advanced filtering (cuisine, accessibility, niche tags)",
						"Up to 100 saved locations",
						"Custom lists & collections",
						"Priority customer support",
						"Ad-free experience",
						"Enhanced AI recommendations",
					},
					Limitations: []string{},
					CTA:         "Start Explorer Plan",
				})
				@PricingCard(PricingPlan{
					Name:        "Pro",
					Price:       "$9.99",
					Period:      "per month",
					Description: "For travel enthusiasts & professionals",
					Color:       "purple",
					Popular:     false,
					Disabled:    true,
					Features: []string{
						"Everything in Explorer",
						"Unlimited saved locations & lists",
						"Offline access & sync",
						"Exclusive curated content",
						"Advanced AI with semantic search",
						"24/7 personalized AI agent",
						"Speech-to-text capabilities",
						"Itinerary export (PDF/Markdown)",
						"Multi-city trip planning",
						"Premium partnerships & exclusive deals",
						"Priority feature access",
						"Dedicated account manager",
					},
					Limitations: []string{},
					CTA:         "Coming Soon",
				})
			</section>
			<!-- Feature Comparison Table -->
			<section class="bg-muted/50 rounded-2xl p-8 mb-20">
				<h2 class="text-3xl font-bold text-foreground text-center mb-8">
					Feature Comparison
				</h2>
				<div class="overflow-x-auto">
					<table class="w-full">
						<thead>
							<tr class="border-b border-border">
								<th class="text-left py-4 pr-4 font-semibold text-foreground">Features</th>
								<th class="text-center py-4 px-4 font-semibold text-foreground">Free</th>
								<th class="text-center py-4 px-4 font-semibold text-blue-600 dark:text-blue-400">Explorer</th>
								<th class="text-center py-4 pl-4 font-semibold text-purple-600 dark:text-purple-400">Pro</th>
							</tr>
						</thead>
						<tbody>
							@FeatureCategory("AI & Personalization", []Feature{
								{Name: "Basic AI recommendations", Free: true, Explorer: true, Pro: true},
								{Name: "Advanced AI with learning", Free: false, Explorer: true, Pro: true},
								{Name: "Semantic search & embeddings", Free: false, Explorer: false, Pro: true},
								{Name: "24/7 AI agent", Free: false, Explorer: false, Pro: "Coming Soon"},
							})
							@FeatureCategory("Search & Discovery", []Feature{
								{Name: "Daily searches", Free: "5 per day", Explorer: "Unlimited", Pro: "Unlimited"},
								{Name: "Basic filters", Free: true, Explorer: true, Pro: true},
								{Name: "Advanced filters", Free: false, Explorer: true, Pro: true},
								{Name: "Multi-city planning", Free: false, Explorer: false, Pro: true},
							})
							@FeatureCategory("Organization", []Feature{
								{Name: "Saved locations", Free: "10", Explorer: "100", Pro: "Unlimited"},
								{Name: "Custom lists", Free: false, Explorer: true, Pro: true},
								{Name: "Itinerary planning", Free: "Basic", Explorer: "Advanced", Pro: "Premium"},
								{Name: "Export capabilities", Free: false, Explorer: false, Pro: true},
							})
							@FeatureCategory("Experience", []Feature{
								{Name: "Mobile experience", Free: true, Explorer: true, Pro: true},
								{Name: "Offline access", Free: false, Explorer: false, Pro: true},
								{Name: "Ad-free experience", Free: false, Explorer: true, Pro: true},
								{Name: "Exclusive content", Free: false, Explorer: false, Pro: true},
							})
						</tbody>
					</table>
				</div>
			</section>
			<!-- FAQ Section -->
			<section class="mb-20">
				<h2 class="text-3xl font-bold text-foreground text-center mb-12">
					Frequently Asked Questions
				</h2>
				<div class="max-w-3xl mx-auto space-y-6">
					@FAQItem("Can I upgrade or downgrade my plan anytime?",
						"Yes, you can change your plan at any time. Changes take effect immediately, and we'll prorate the charges accordingly.")
					@FAQItem("Is there a free trial for paid plans?",
						"We don't offer a traditional free trial, but our Free plan gives you access to core features. Plus, all paid plans come with a 30-day money-back guarantee.")
					@FAQItem("How does the AI learn my preferences?",
						"Our AI analyzes your explicit preferences, saved locations, and interaction patterns to provide increasingly personalized recommendations over time.")
					@FAQItem("Do you offer discounts for annual subscriptions?",
						"Yes! Annual subscriptions receive a 20% discount. Contact our support team to set up annual billing.")
				</div>
			</section>
			<!-- Call to Action -->
			<section class="text-center bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-700 dark:to-purple-700 rounded-2xl p-12 text-white">
				<h2 class="text-3xl font-bold mb-4">Ready to Start Exploring?</h2>
				<p class="text-lg mb-8 text-white/90 max-w-2xl mx-auto">
					Join thousands of users who've already discovered their perfect spots with Loci. Start free and upgrade when you're ready for more.
				</p>
				<div class="flex flex-col sm:flex-row gap-4 justify-center">
					<a href="/auth/signup" class="inline-block">
						<button class="bg-white text-blue-600 font-semibold px-8 py-3 rounded-lg hover:bg-gray-100 focus:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-blue-600 transition-colors">
							Start Free Today
						</button>
					</a>
					<a href="/discover" class="inline-block">
						<button class="border border-white/20 text-white hover:bg-white/10 focus:bg-white/10 font-semibold px-8 py-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-blue-600 transition-colors">
							Explore Features
						</button>
					</a>
				</div>
			</section>
		</div>
	</div>
}

type PricingPlan struct {
	Name        string
	Price       string
	Period      string
	Description string
	Color       string
	Popular     bool
	Disabled    bool
	Features    []string
	Limitations []string
	CTA         string
}

type Feature struct {
	Name     string
	Free     interface{}
	Explorer interface{}
	Pro      interface{}
}

templ PricingCard(plan PricingPlan) {
	<article
		class={
			"relative bg-card border-2 rounded-2xl shadow-lg transition-all duration-300 focus-within:ring-2 focus-within:ring-blue-500 focus-within:ring-offset-2",
			templ.KV("border-gray-300 dark:border-gray-600 opacity-75", plan.Disabled),
			templ.KV("border-blue-500 dark:border-blue-400 scale-105 hover:shadow-xl", plan.Popular && !plan.Disabled),
			templ.KV("border-border hover:border-blue-300 dark:hover:border-blue-600 hover:shadow-xl", !plan.Popular && !plan.Disabled),
		}
	>
		if plan.Popular && !plan.Disabled {
			<div class="absolute -top-4 left-1/2 transform -translate-x-1/2">
				<div class="bg-blue-500 dark:bg-blue-600 text-white px-4 py-1 rounded-full text-sm font-medium flex items-center">
					<svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
					</svg>
					Most Popular
				</div>
			</div>
		}
		if plan.Disabled {
			<div class="absolute -top-4 left-1/2 transform -translate-x-1/2">
				<div class="bg-orange-500 dark:bg-orange-600 text-white px-4 py-1 rounded-full text-sm font-medium flex items-center">
					<svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
					</svg>
					Coming Soon
				</div>
			</div>
		}
		<div class="p-8">
			<div class="flex items-center mb-4">
				<div
					class={
						"p-3 rounded-lg mr-4",
						templ.KV("bg-gray-100 dark:bg-gray-800", plan.Color == "gray"),
						templ.KV("bg-blue-100 dark:bg-blue-900/30", plan.Color == "blue"),
						templ.KV("bg-purple-100 dark:bg-purple-900/30", plan.Color == "purple"),
					}
				>
					if plan.Color == "gray" {
						<svg class="w-6 h-6 text-gray-600 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
						</svg>
					} else if plan.Color == "blue" {
						<svg class="w-6 h-6 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
						</svg>
					} else if plan.Color == "purple" {
						<svg class="w-6 h-6 text-purple-600 dark:text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"></path>
						</svg>
					}
				</div>
				<h3 class="text-2xl font-bold text-card-foreground">{ plan.Name }</h3>
			</div>
			<div class="mb-4">
				<div class="flex items-center gap-2">
					<span
						class={
							"text-4xl font-bold",
							templ.KV("text-gray-500 dark:text-gray-400", plan.Disabled),
							templ.KV("text-card-foreground", !plan.Disabled),
						}
					>
						{ plan.Price }
					</span>
					<span
						class={
							"ml-2",
							templ.KV("text-gray-500 dark:text-gray-400", plan.Disabled),
							templ.KV("text-muted-foreground", !plan.Disabled),
						}
					>
						/{ plan.Period }
					</span>
				</div>
			</div>
			<p class="text-muted-foreground mb-6">{ plan.Description }</p>
			if plan.Name == "Explorer" && !plan.Disabled {
				<a href="/billing" class="block mb-6">
					<button class="w-full py-3 px-6 rounded-lg font-semibold transition-colors focus:outline-none bg-blue-600 hover:bg-blue-700 focus:bg-blue-700 text-white focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
						{ plan.CTA }
					</button>
				</a>
			} else {
				<button
					class={
						"w-full py-3 px-6 rounded-lg font-semibold transition-colors focus:outline-none mb-6",
						templ.KV("bg-gray-300 dark:bg-gray-700 text-gray-500 dark:text-gray-400 cursor-not-allowed", plan.Disabled),
						templ.KV("bg-blue-600 hover:bg-blue-700 focus:bg-blue-700 text-white focus:ring-2 focus:ring-blue-500 focus:ring-offset-2", plan.Popular && !plan.Disabled),
						templ.KV("border border-border text-card-foreground hover:bg-muted focus:bg-muted focus:ring-2 focus:ring-blue-500 focus:ring-offset-2", !plan.Popular && !plan.Disabled && plan.Name == "Free"),
					}
				>
					if plan.Disabled {
						<div class="flex items-center justify-center gap-2">
							<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
							</svg>
							{ plan.CTA }
						</div>
					} else {
						{ plan.CTA }
					}
				</button>
			}
			<div class="space-y-3">
				<h4
					class={
						"font-semibold",
						templ.KV("text-gray-500 dark:text-gray-400", plan.Disabled),
						templ.KV("text-card-foreground", !plan.Disabled),
					}
				>
					Includes:
				</h4>
				<ul class="space-y-2">
					for _, feature := range plan.Features {
						<li class="flex items-start">
							<svg
								class={
									"w-5 h-5 mr-3 mt-0.5 flex-shrink-0",
									templ.KV("text-gray-400 dark:text-gray-500", plan.Disabled),
									templ.KV("text-green-500 dark:text-green-400", !plan.Disabled),
								}
								fill="none"
								stroke="currentColor"
								viewBox="0 0 24 24"
							>
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
							</svg>
							<span
								class={
									"text-sm",
									templ.KV("text-gray-500 dark:text-gray-400", plan.Disabled),
									templ.KV("text-muted-foreground", !plan.Disabled),
								}
							>
								{ feature }
							</span>
						</li>
					}
				</ul>
				if len(plan.Limitations) > 0 {
					<hr class="my-4 border-border"/>
					<h4 class="font-semibold text-card-foreground text-sm">Limitations:</h4>
					<ul class="space-y-2">
						for _, limitation := range plan.Limitations {
							<li class="flex items-start">
								<div class="w-5 h-5 mr-3 mt-0.5 flex-shrink-0">
									<div class="w-1.5 h-1.5 bg-muted-foreground rounded-full mx-auto mt-2"></div>
								</div>
								<span class="text-muted-foreground/80 text-sm">{ limitation }</span>
							</li>
						}
					</ul>
				}
			</div>
		</div>
	</article>
}

templ FeatureCategory(category string, features []Feature) {
	<tr>
		<td colspan="4" class="py-4">
			<h3 class="font-semibold text-foreground">{ category }</h3>
		</td>
	</tr>
	for _, feature := range features {
		<tr class="border-b border-border/50">
			<td class="py-3 pr-4 text-muted-foreground">{ feature.Name }</td>
			<td class="text-center py-3 px-4">
				@FeatureValue(feature.Free, "")
			</td>
			<td class="text-center py-3 px-4">
				@FeatureValue(feature.Explorer, "blue")
			</td>
			<td class="text-center py-3 pl-4">
				@FeatureValue(feature.Pro, "purple")
			</td>
		</tr>
	}
}

templ FeatureValue(value interface{}, color string) {
	switch v := value.(type) {
		case bool:
			if v {
				<svg class="w-5 h-5 text-green-500 dark:text-green-400 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
				</svg>
			} else {
				<div class="w-5 h-5 mx-auto flex items-center justify-center">
					<div class="w-4 h-0.5 bg-muted-foreground/50"></div>
				</div>
			}
		case string:
			<span
				class={
					"text-sm font-medium",
					templ.KV("text-muted-foreground", color == ""),
					templ.KV("text-blue-600 dark:text-blue-400", color == "blue"),
					templ.KV("text-purple-600 dark:text-purple-400", color == "purple"),
				}
			>
				{ v }
			</span>
	}
}

templ FAQItem(question string, answer string) {
	<article class="bg-card rounded-lg p-6 border border-border">
		<h3 class="font-semibold text-card-foreground mb-2">{ question }</h3>
		<p class="text-muted-foreground">{ answer }</p>
	</article>
}
