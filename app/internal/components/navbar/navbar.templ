package navbar

import (
	"github.com/FACorreiaa/go-templui/app/models"
	"github.com/FACorreiaa/go-templui/app/utils"
)

type Props struct {
	Nav       models.Navigation
	User      *models.User
	ActiveNav string
	Class     string
}

templ Navbar(props Props) {
	<nav class={ utils.TwMerge("bg-background/80 backdrop-blur-md border-b border-border sticky top-0 z-50 transition-colors", props.Class) }>
		<div class="px-4 sm:px-6 lg:px-8">
			<div class="flex justify-between items-center h-14 sm:h-16">
				<!-- Logo - Mobile First -->
				<div class="flex items-center">
					<a href="/" class="flex items-center">
						<div class="w-6 h-6 sm:w-8 sm:h-8 flex items-center justify-center">
							<div class="w-full h-full bg-blue-600 text-white rounded flex items-center justify-center text-sm font-bold">
								L
							</div>
						</div>
						<span class="ml-2 text-lg sm:text-xl font-bold text-foreground transition-colors">
							Loci
						</span>
						if props.User != nil {
							<span class="ml-1 sm:ml-2 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 text-xs px-1.5 py-0.5 sm:px-2 sm:py-1 rounded-full font-medium">
								AI
							</span>
						}
					</a>
				</div>

				<!-- Mobile Menu Button -->
				<button
					class="md:hidden p-2"
					onclick="toggleMobileMenu()"
					id="mobile-menu-btn"
				>
					<svg id="menu-icon" class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
					</svg>
					<svg id="close-icon" class="w-5 h-5 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
					</svg>
				</button>

				<!-- Desktop Navigation -->
				if props.User == nil {
					<div class="hidden md:flex items-center space-x-6 lg:space-x-8">
						<a href="/about" class="text-muted-foreground hover:text-blue-600 font-medium transition-colors text-sm lg:text-base">
							About
						</a>
						<a href="/features" class="text-muted-foreground hover:text-blue-600 font-medium transition-colors text-sm lg:text-base">
							Features
						</a>
						<a href="/pricing" class="text-muted-foreground hover:text-blue-600 font-medium transition-colors text-sm lg:text-base">
							Pricing
						</a>
					</div>
				} else {
					<div class="hidden md:flex items-center space-x-1">
						<a href="/discover" 
							class={ utils.TwMerge(
								"flex items-center gap-2 px-3 py-2 rounded-lg font-medium transition-colors text-sm",
								utils.IfElse(
									props.ActiveNav == "discover",
									"bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300",
									"text-muted-foreground hover:text-blue-600 hover:bg-accent",
								),
							) }>
							<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
							</svg>
							Discover
							<span class="ml-1 bg-orange-100 dark:bg-orange-900 text-orange-700 dark:text-orange-300 text-xs px-1.5 py-0.5 rounded-full font-medium">
								Experimental
							</span>
						</a>

						<a href="/recents"
							class={ utils.TwMerge(
								"flex items-center gap-2 px-3 py-2 rounded-lg font-medium transition-colors text-sm",
								utils.IfElse(
									props.ActiveNav == "recents",
									"bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300",
									"text-muted-foreground hover:text-blue-600 hover:bg-accent",
								),
							) }>
							<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
							</svg>
							Recents
						</a>

						<a href="/chat"
							class={ utils.TwMerge(
								"flex items-center gap-2 px-3 py-2 rounded-lg font-medium transition-colors text-sm",
								utils.IfElse(
									props.ActiveNav == "chat",
									"bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300",
									"text-muted-foreground hover:text-blue-600 hover:bg-accent",
								),
							) }>
							<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
							</svg>
							Chat
						</a>

						<a href="/favorites"
							class={ utils.TwMerge(
								"flex items-center gap-2 px-3 py-2 rounded-lg font-medium transition-colors text-sm",
								utils.IfElse(
									props.ActiveNav == "favorites",
									"bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300",
									"text-muted-foreground hover:text-blue-600 hover:bg-accent",
								),
							) }>
							<svg class="w-4 h-4 fill-current" fill="currentColor" viewBox="0 0 24 24">
								<path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
							</svg>
							Favorites
						</a>

						<a href="/bookmarks"
							class={ utils.TwMerge(
								"flex items-center gap-2 px-3 py-2 rounded-lg font-medium transition-colors text-sm",
								utils.IfElse(
									props.ActiveNav == "bookmarks",
									"bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300",
									"text-muted-foreground hover:text-blue-600 hover:bg-accent",
								),
							) }>
							<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
							</svg>
							Bookmarks
						</a>

						<a href="/lists"
							class={ utils.TwMerge(
								"flex items-center gap-2 px-3 py-2 rounded-lg font-medium transition-colors text-sm",
								utils.IfElse(
									props.ActiveNav == "lists",
									"bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300",
									"text-muted-foreground hover:text-blue-600 hover:bg-accent",
								),
							) }>
							<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
							</svg>
							Lists
						</a>

						<a href="/profile"
							class={ utils.TwMerge(
								"flex items-center gap-2 px-3 py-2 rounded-lg font-medium transition-colors text-sm",
								utils.IfElse(
									props.ActiveNav == "profile",
									"bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300",
									"text-muted-foreground hover:text-blue-600 hover:bg-accent",
								),
							) }>
							<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
							</svg>
							Profile
						</a>
					</div>
				}

				<!-- Desktop User Menu or Auth Buttons -->
				if props.User == nil {
					<div class="hidden md:flex items-center space-x-3 lg:space-x-4">
						<!-- Theme toggle -->
						<button 
							id="theme-toggle"
							class="p-2 rounded-md hover:bg-accent transition-colors"
							onclick="toggleTheme()"
							title="Toggle theme"
						>
							<svg id="sun-icon" class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<circle cx="12" cy="12" r="5"></circle>
								<line x1="12" y1="1" x2="12" y2="3"></line>
								<line x1="12" y1="21" x2="12" y2="23"></line>
								<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
								<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
								<line x1="1" y1="12" x2="3" y2="12"></line>
								<line x1="21" y1="12" x2="23" y2="12"></line>
								<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
								<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
							</svg>
							<svg id="moon-icon" class="h-4 w-4 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
							</svg>
						</button>

						<a href="/auth/signin">
							<button class="text-muted-foreground hover:text-foreground px-3 lg:px-4 py-2 text-sm lg:text-base font-medium transition-colors">
								Log In
							</button>
						</a>
						<a href="/auth/signup">
							<button class="bg-blue-600 hover:bg-blue-700 text-white text-sm lg:text-base px-3 lg:px-4 py-2 rounded-lg font-medium transition-colors">
								Get Started
							</button>
						</a>
					</div>
				} else {
					<div class="hidden md:flex items-center space-x-3 relative" x-data="{ showUserMenu: false }">
						<!-- Theme toggle -->
						<button 
							id="theme-toggle"
							class="p-2 rounded-md hover:bg-accent transition-colors"
							onclick="toggleTheme()"
							title="Toggle theme"
						>
							<svg id="sun-icon" class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<circle cx="12" cy="12" r="5"></circle>
								<line x1="12" y1="1" x2="12" y2="3"></line>
								<line x1="12" y1="21" x2="12" y2="23"></line>
								<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
								<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
								<line x1="1" y1="12" x2="3" y2="12"></line>
								<line x1="21" y1="12" x2="23" y2="12"></line>
								<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
								<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
							</svg>
							<svg id="moon-icon" class="h-4 w-4 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
							</svg>
						</button>

						<button
							class="flex items-center gap-2 p-2"
							@click="showUserMenu = !showUserMenu"
							@click.away="showUserMenu = false"
						>
							<div class="w-8 h-8 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-sm font-bold">
								if props.User.Name != "" {
									{ string(props.User.Name[0]) }
								} else {
									U
								}
							</div>
							<span class="text-sm font-medium text-muted-foreground">
								if props.User.Name != "" {
									{ props.User.Name }
								} else {
									User
								}
							</span>
						</button>

						<!-- User Dropdown Menu -->
						<div x-show="showUserMenu" 
							x-transition:enter="transition ease-out duration-100"
							x-transition:enter-start="transform opacity-0 scale-95"
							x-transition:enter-end="transform opacity-100 scale-100"
							x-transition:leave="transition ease-in duration-75"
							x-transition:leave-start="transform opacity-100 scale-100"
							x-transition:leave-end="transform opacity-0 scale-95"
							class="absolute top-full right-0 mt-2 w-48 bg-card rounded-lg shadow-lg border py-1 z-50">
							<a href="/settings"
								class="flex items-center gap-3 px-4 py-2 text-sm text-muted-foreground hover:bg-accent hover:text-foreground transition-colors"
							>
								<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
								</svg>
								Settings
							</a>
							<a href="/billing"
								class="flex items-center gap-3 px-4 py-2 text-sm text-muted-foreground hover:bg-accent hover:text-foreground transition-colors"
							>
								<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
								</svg>
								Billing
							</a>
							<a href="/pricing"
								class="flex items-center gap-3 px-4 py-2 text-sm text-muted-foreground hover:bg-accent hover:text-foreground transition-colors"
							>
								<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
								</svg>
								Plans
							</a>
							<button
								hx-post="/auth/logout"
								hx-trigger="click"
								class="w-full flex items-center gap-3 px-4 py-2 text-sm text-muted-foreground hover:bg-accent hover:text-foreground transition-colors text-left"
							>
								<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
								</svg>
								Sign Out
							</button>
						</div>
					</div>
				}
			</div>
		</div>

		<!-- Mobile Menu - Full Screen Overlay -->
		<div id="mobile-menu" class="md:hidden fixed inset-0 z-50 bg-background hidden">
			<div class="flex flex-col h-full">
				<!-- Mobile Header -->
				<div class="flex justify-between items-center px-4 py-4 border-b border-border">
					<a href="/" class="flex items-center" onclick="closeMobileMenu()">
						<div class="w-6 h-6 flex items-center justify-center">
							<div class="w-full h-full bg-blue-600 text-white rounded flex items-center justify-center text-sm font-bold">
								L
							</div>
						</div>
						<span class="ml-2 text-lg font-bold text-foreground">
							Loci
						</span>
						if props.User != nil {
							<span class="ml-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-300 text-xs px-1.5 py-0.5 rounded-full font-medium">
								AI
							</span>
						}
					</a>
					<button class="p-2" onclick="closeMobileMenu()">
						<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
						</svg>
					</button>
				</div>

				<!-- Mobile Navigation Links -->
				<div class="flex-1 px-4 py-6 space-y-1">
					if props.User == nil {
						<a href="/about" class="block px-4 py-3 text-lg font-medium text-foreground hover:bg-accent rounded-lg transition-colors" onclick="closeMobileMenu()">
							About
						</a>
						<a href="/features" class="block px-4 py-3 text-lg font-medium text-foreground hover:bg-accent rounded-lg transition-colors" onclick="closeMobileMenu()">
							Features
						</a>
						<a href="/pricing" class="block px-4 py-3 text-lg font-medium text-foreground hover:bg-accent rounded-lg transition-colors" onclick="closeMobileMenu()">
							Pricing
						</a>
					} else {
						<a href="/discover" class="flex items-center gap-3 px-4 py-3 text-lg font-medium text-foreground hover:bg-accent rounded-lg transition-colors" onclick="closeMobileMenu()">
							<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
							</svg>
							Discover
							<span class="bg-orange-100 dark:bg-orange-900 text-orange-700 dark:text-orange-300 text-xs px-1.5 py-0.5 rounded-full font-medium">
								Experimental
							</span>
						</a>
						<a href="/recents" class="flex items-center gap-3 px-4 py-3 text-lg font-medium text-foreground hover:bg-accent rounded-lg transition-colors" onclick="closeMobileMenu()">
							<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
							</svg>
							Recents
						</a>
						<a href="/chat" class="flex items-center gap-3 px-4 py-3 text-lg font-medium text-foreground hover:bg-accent rounded-lg transition-colors" onclick="closeMobileMenu()">
							<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
							</svg>
							Chat
						</a>
						<a href="/favorites" class="flex items-center gap-3 px-4 py-3 text-lg font-medium text-foreground hover:bg-accent rounded-lg transition-colors" onclick="closeMobileMenu()">
							<svg class="w-5 h-5 fill-current" fill="currentColor" viewBox="0 0 24 24">
								<path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
							</svg>
							Favorites
						</a>
						<a href="/bookmarks" class="flex items-center gap-3 px-4 py-3 text-lg font-medium text-foreground hover:bg-accent rounded-lg transition-colors" onclick="closeMobileMenu()">
							<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
							</svg>
							Bookmarks
						</a>
						<a href="/lists" class="flex items-center gap-3 px-4 py-3 text-lg font-medium text-foreground hover:bg-accent rounded-lg transition-colors" onclick="closeMobileMenu()">
							<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
							</svg>
							Lists
						</a>
						<a href="/profile" class="flex items-center gap-3 px-4 py-3 text-lg font-medium text-foreground hover:bg-accent rounded-lg transition-colors" onclick="closeMobileMenu()">
							<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
							</svg>
							Profile
						</a>
					}
				</div>

				<!-- Mobile Action Buttons -->
				if props.User == nil {
					<div class="px-4 py-6 space-y-3 border-t border-border">
						<div class="flex justify-center mb-3">
							<button 
								id="mobile-theme-toggle"
								class="p-2 rounded-md hover:bg-accent transition-colors"
								onclick="toggleTheme()"
							>
								<svg id="mobile-sun-icon" class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<circle cx="12" cy="12" r="5"></circle>
									<line x1="12" y1="1" x2="12" y2="3"></line>
									<line x1="12" y1="21" x2="12" y2="23"></line>
									<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
									<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
									<line x1="1" y1="12" x2="3" y2="12"></line>
									<line x1="21" y1="12" x2="23" y2="12"></line>
									<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
									<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
								</svg>
								<svg id="mobile-moon-icon" class="h-4 w-4 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
								</svg>
							</button>
						</div>
						<a href="/auth/signin" class="block" onclick="closeMobileMenu()">
							<button class="w-full justify-center py-3 text-base border rounded-lg hover:bg-accent transition-colors">
								Log In
							</button>
						</a>
						<a href="/auth/signup" class="block" onclick="closeMobileMenu()">
							<button class="w-full justify-center py-3 text-base bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors">
								Get Started
							</button>
						</a>
					</div>
				} else {
					<div class="px-4 py-6 space-y-3 border-t border-border">
						<div class="flex items-center gap-3 px-4 py-3">
							<div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-lg font-bold">
								if props.User.Name != "" {
									{ string(props.User.Name[0]) }
								} else {
									U
								}
							</div>
							<div class="flex-1">
								<div class="font-medium text-foreground">
									if props.User.Name != "" {
										{ props.User.Name }
									} else {
										User
									}
								</div>
								<div class="text-sm text-muted-foreground">
									if props.User.Email != "" {
										{ props.User.Email }
									} else {
										user@example.com
									}
								</div>
							</div>
							<button 
								id="mobile-theme-toggle-auth"
								class="p-2 rounded-md hover:bg-accent transition-colors"
								onclick="toggleTheme()"
							>
								<svg id="mobile-sun-icon-auth" class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<circle cx="12" cy="12" r="5"></circle>
									<line x1="12" y1="1" x2="12" y2="3"></line>
									<line x1="12" y1="21" x2="12" y2="23"></line>
									<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
									<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
									<line x1="1" y1="12" x2="3" y2="12"></line>
									<line x1="21" y1="12" x2="23" y2="12"></line>
									<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
									<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
								</svg>
								<svg id="mobile-moon-icon-auth" class="h-4 w-4 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
								</svg>
							</button>
						</div>
						<a href="/settings" class="block" onclick="closeMobileMenu()">
							<button class="w-full justify-center py-3 text-base border rounded-lg hover:bg-accent transition-colors">
								Settings
							</button>
						</a>
						<a href="/billing" class="block" onclick="closeMobileMenu()">
							<button class="w-full justify-center py-3 text-base border rounded-lg hover:bg-accent transition-colors">
								Billing
							</button>
						</a>
						<a href="/pricing" class="block" onclick="closeMobileMenu()">
							<button class="w-full justify-center py-3 text-base border rounded-lg hover:bg-accent transition-colors">
								Plans
							</button>
						</a>
						<button
							hx-post="/auth/logout"
							hx-trigger="click"
							class="w-full justify-center py-3 text-base text-red-600 border border-red-200 hover:bg-red-50 dark:border-red-800 dark:hover:bg-red-950 rounded-lg transition-colors"
							onclick="closeMobileMenu()"
						>
							Sign Out
						</button>
					</div>
				}
			</div>
		</div>
	</nav>

	<script>
		function toggleTheme() {
			const html = document.documentElement;
			const isDark = html.classList.contains('dark');
			const sunIcons = document.querySelectorAll('#sun-icon, #mobile-sun-icon, #mobile-sun-icon-auth');
			const moonIcons = document.querySelectorAll('#moon-icon, #mobile-moon-icon, #mobile-moon-icon-auth');
			
			if (isDark) {
				html.classList.remove('dark');
				localStorage.setItem('theme', 'light');
				sunIcons.forEach(icon => icon.classList.remove('hidden'));
				moonIcons.forEach(icon => icon.classList.add('hidden'));
			} else {
				html.classList.add('dark');
				localStorage.setItem('theme', 'dark');
				sunIcons.forEach(icon => icon.classList.add('hidden'));
				moonIcons.forEach(icon => icon.classList.remove('hidden'));
			}
		}

		function toggleMobileMenu() {
			const menu = document.getElementById('mobile-menu');
			const menuIcon = document.getElementById('menu-icon');
			const closeIcon = document.getElementById('close-icon');
			
			if (menu.classList.contains('hidden')) {
				menu.classList.remove('hidden');
				menuIcon.classList.add('hidden');
				closeIcon.classList.remove('hidden');
			} else {
				menu.classList.add('hidden');
				menuIcon.classList.remove('hidden');
				closeIcon.classList.add('hidden');
			}
		}

		function closeMobileMenu() {
			const menu = document.getElementById('mobile-menu');
			const menuIcon = document.getElementById('menu-icon');
			const closeIcon = document.getElementById('close-icon');
			
			menu.classList.add('hidden');
			menuIcon.classList.remove('hidden');
			closeIcon.classList.add('hidden');
		}

		// Initialize theme icons on page load
		document.addEventListener('DOMContentLoaded', function() {
			const isDark = document.documentElement.classList.contains('dark');
			const sunIcons = document.querySelectorAll('#sun-icon, #mobile-sun-icon, #mobile-sun-icon-auth');
			const moonIcons = document.querySelectorAll('#moon-icon, #mobile-moon-icon, #mobile-moon-icon-auth');
			
			if (isDark) {
				sunIcons.forEach(icon => icon.classList.add('hidden'));
				moonIcons.forEach(icon => icon.classList.remove('hidden'));
			} else {
				sunIcons.forEach(icon => icon.classList.remove('hidden'));
				moonIcons.forEach(icon => icon.classList.add('hidden'));
			}
		});
	</script>
}