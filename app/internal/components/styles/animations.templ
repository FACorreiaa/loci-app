package styles

// AnimationsCSS provides custom CSS animations for UI elements
templ AnimationsCSS() {
	<style>
	/* Heartbeat Animation for Favorites */
	@keyframes heartbeat {
		0% {
			transform: scale(1);
		}
		14% {
			transform: scale(1.3);
		}
		28% {
			transform: scale(1);
		}
		42% {
			transform: scale(1.3);
		}
		70% {
			transform: scale(1);
		}
	}

	.animate-heartbeat {
		animation: heartbeat 1s ease-in-out;
	}

	/* Fade In Animation */
	@keyframes fadeIn {
		from {
			opacity: 0;
			transform: translateY(10px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	.animate-fade-in {
		animation: fadeIn 0.3s ease-out;
	}

	/* Slide In from Right */
	@keyframes slideInRight {
		from {
			opacity: 0;
			transform: translateX(100%);
		}
		to {
			opacity: 1;
			transform: translateX(0);
		}
	}

	.animate-slide-in-right {
		animation: slideInRight 0.3s ease-out;
	}

	/* Pulse Animation */
	@keyframes pulse {
		0%, 100% {
			opacity: 1;
		}
		50% {
			opacity: 0.5;
		}
	}

	.animate-pulse-slow {
		animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
	}

	/* Bounce Animation */
	@keyframes bounce {
		0%, 100% {
			transform: translateY(0);
		}
		50% {
			transform: translateY(-10px);
		}
	}

	.animate-bounce-slow {
		animation: bounce 2s ease-in-out infinite;
	}

	/* Loading Spinner */
	@keyframes spin {
		from {
			transform: rotate(0deg);
		}
		to {
			transform: rotate(360deg);
		}
	}

	.animate-spin-slow {
		animation: spin 1.5s linear infinite;
	}

	/* Scale In Animation */
	@keyframes scaleIn {
		from {
			opacity: 0;
			transform: scale(0.9);
		}
		to {
			opacity: 1;
			transform: scale(1);
		}
	}

	.animate-scale-in {
		animation: scaleIn 0.2s ease-out;
	}

	/* Shimmer Effect for Loading States */
	@keyframes shimmer {
		0% {
			background-position: -1000px 0;
		}
		100% {
			background-position: 1000px 0;
		}
	}

	.animate-shimmer {
		animation: shimmer 2s infinite linear;
		background: linear-gradient(
			90deg,
			#f3f4f6 0%,
			#e5e7eb 20%,
			#f3f4f6 40%,
			#f3f4f6 100%
		);
		background-size: 1000px 100%;
	}

	.dark .animate-shimmer {
		background: linear-gradient(
			90deg,
			#374151 0%,
			#4b5563 20%,
			#374151 40%,
			#374151 100%
		);
		background-size: 1000px 100%;
	}

	/* Notification Slide In */
	@keyframes slideInDown {
		from {
			opacity: 0;
			transform: translateY(-100%);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	.animate-slide-in-down {
		animation: slideInDown 0.3s ease-out;
	}

	/* Loading State Transitions */
	.loading-indicator {
		position: relative;
		overflow: hidden;
	}

	.loading-indicator::after {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: linear-gradient(
			90deg,
			transparent 0%,
			rgba(255, 255, 255, 0.2) 50%,
			transparent 100%
		);
		animation: shimmer 1.5s infinite;
	}

	/* View Mode Transition Classes */
	.view-mode-transition {
		transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
	}

	.view-mode-fade-enter {
		opacity: 0;
		transform: translateY(10px);
	}

	.view-mode-fade-enter-to {
		opacity: 1;
		transform: translateY(0);
	}

	/* Split View Enhancements */
	@media (min-width: 1024px) {
		.split-view-container {
			display: grid;
			grid-template-columns: 1fr;
			gap: 1rem;
			transition: grid-template-columns 0.3s ease;
		}

		.split-view-container.active {
			grid-template-columns: 1fr 1fr;
		}
	}

	/* Map Height Transitions */
	.map-container {
		transition: height 0.3s ease, max-height 0.3s ease;
	}

	.map-container.full-height {
		height: calc(100vh - 200px);
		max-height: none;
	}

	.map-container.split-height {
		height: 500px;
		max-height: 500px;
	}

	/* Button Active States */
	.view-mode-btn {
		transition: all 0.2s ease;
	}

	.view-mode-btn.active {
		background: rgb(59 130 246);
		color: white;
		transform: scale(1.05);
	}

	.view-mode-btn:not(.active):hover {
		background: rgba(59, 130, 246, 0.1);
	}

	/* Smooth Hover Transitions */
	.smooth-hover {
		transition: all 0.2s ease;
	}

	.smooth-hover:hover {
		transform: translateY(-2px);
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
	}

	/* Card Hover Effect */
	.card-hover {
		transition: transform 0.2s ease, box-shadow 0.2s ease;
	}

	.card-hover:hover {
		transform: translateY(-4px);
		box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
	}

	/* Focus Ring Transitions */
	.focus-ring {
		transition: box-shadow 0.2s ease;
	}

	.focus-ring:focus {
		outline: none;
		box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5);
	}
	</style>
}
